version: '2.3'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
    ports:
      - "5436:5432"
  airflow:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        AIRFLOW_VERSION: "2.3.2"
        SPARK_VERSION: "3.0.2"
        HADOOP_VERSION: "3.2.0"
        SCALA_VERSION: "2.12"
        PYTHON_VERSION: "3.7"
        SQLALCHEMY_VERSION: "1.4.9"
    ports:
      - 8080:8080
    environment:
      # This uses sqlite as database by default
      ENABLE_AIRFLOW_INITDB: "true"
      AIRFLOW__CORE__FERNET_KEY: 8NE6O6RcTJpxcCkuKxOHOExzIJkXkeJKbRie03a69dI=
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__SCHEDULER__MAX_THREADS: "1"
      ENABLE_AIRFLOW_RBAC_SETUP_AUTH: "true"
      AIRFLOW_WEBSERVER_RBAC_USER: admin
      AIRFLOW_WEBSERVER_RBAC_PASSWORD: admin 
      AIRFLOW_WEBSERVER_RBAC_EMAIL: tuananhtin@gmail.com
      AIRFLOW_WEBSERVER_RBAC_FIRST_NAME: admin
      AIRFLOW_WEBSERVER_RBAC_LAST_NAME: anhlbt
      # AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@192.168.0.183/airflow
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW_CONN_AWS_DEFAULT: aws://?profile=airflow-spark1&s3_config_file=/airflow/creds/s3&s3_config_format=aws
      AIRFLOW__KUBERNETES__LOGS_VOLUME_CLAIM: "efs-claim"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"      
    restart: always
    volumes:
      - ./airflow-data/creds:/airflow/creds
      - ./dags:/airflow/dags
      - ./sparkFiles:/airflow/sparkFiles
      - ./airflow-data/logs:/airflow/logs
      - ./airflow-data/plugins:/airflow/plugins
      - ./airflow-data/airflow.cfg:/airlfow/airflow.cfg
    # network_mode: host
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  postgres-db-volume:        